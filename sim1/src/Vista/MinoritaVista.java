/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Vista;

import NumerosAleatorios.Fibonacci;
import NumerosAleatorios.Green;
import NumerosAleatorios.Mezcal1;
import NumerosAleatorios.Mixto;
import NumerosAleatorios.Moore;
import NumerosAleatorios.Multiplicativo;
import java.io.IOException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import logica.Comunicacion;
import logica.Proovedor;
import logica.RegistroJugador;
import logica.VAlidador;
import logica.minorista;

/**
 *
 * @author Administrador
 */
public class MinoritaVista extends javax.swing.JFrame implements VistaINt {

    /**
     * Creates new form MinoritaVista
     */
    private String nombre;
    private boolean simulado;
    private Proovedor p;
    private int PrecioVenta;
    private int InventarioInicial;
    private int InventarioMinimo;
    private int PrecioVentaUnidad;
    private int RecursosIniciales = 500;
    public minorista m;
    public ArrayList<ArrayList> ListasNumerosAleatoris = new ArrayList();
    public ArrayList<Float> lista = new ArrayList();
    ;
    public ArrayList<Float> list = new ArrayList();

    ;
    public MinoritaVista() {
        initComponents();
    }

    MinoritaVista(String text, String hostAddress, boolean simulado) throws IOException {
        initComponents();
        this.simulado = simulado;
        this.nombre = text;
        ListasNumerosAleatoris.add(new ArrayList());
        ListasNumerosAleatoris.add(new ArrayList());
        ListasNumerosAleatoris.add(new ArrayList());
        this.iptext.setText(hostAddress);
        this.Titulo.setText(simulado ? "Minorista Simulado" : "Minorista Humano");
        this.NOMbre1.setText(nombre);
        logtext.setEditable(false);
        info.setEditable(false);

        enviarbutton.setSelected(true);
        movb.setEnabled(false);
        if (simulado) {

            manual.setVisible(false);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        logtext = new javax.swing.JTextArea();
        Titulo = new javax.swing.JLabel();
        NOMbre1 = new javax.swing.JLabel();
        RegistroPanel = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        provedorIp = new javax.swing.JTextField();
        ProvedorPuerto = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        Registrobutton = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        iptext = new javax.swing.JTextField();
        porrttext = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        info = new javax.swing.JTextArea();
        manual = new javax.swing.JPanel();
        movb = new javax.swing.JButton();
        enviarbutton = new javax.swing.JRadioButton();
        passarbutton = new javax.swing.JRadioButton();
        cantidadf = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        alepanel = new javax.swing.JPanel();
        PuntodeReorden = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        alpanl = new javax.swing.JPanel();
        K = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        X1 = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        a = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        M = new javax.swing.JTextField();
        X0 = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        eleccion = new javax.swing.JComboBox();
        Ctext = new javax.swing.JTextField();
        jLabel19 = new javax.swing.JLabel();
        aleatoriosbox = new javax.swing.JComboBox();
        jButton5 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        logtext.setColumns(20);
        logtext.setRows(5);
        jScrollPane1.setViewportView(logtext);

        Titulo.setFont(new java.awt.Font("Georgia", 0, 14)); // NOI18N

        NOMbre1.setFont(new java.awt.Font("Georgia", 0, 14)); // NOI18N

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Titulo, javax.swing.GroupLayout.PREFERRED_SIZE, 356, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(NOMbre1, javax.swing.GroupLayout.PREFERRED_SIZE, 324, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 338, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(Titulo, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(NOMbre1, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 280, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel6.setText("Ip Mayorista");

        provedorIp.setText("192.168.1.184");
        provedorIp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                provedorIpActionPerformed(evt);
            }
        });
        provedorIp.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                provedorIpKeyTyped(evt);
            }
        });

        ProvedorPuerto.setText("9090");
        ProvedorPuerto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ProvedorPuertoActionPerformed(evt);
            }
        });
        ProvedorPuerto.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                ProvedorPuertoKeyTyped(evt);
            }
        });

        jLabel7.setText("Puerto Escucha");

        jLabel3.setText("Mayorista");

        Registrobutton.setText("Registrar e Iniciar");
        Registrobutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RegistrobuttonActionPerformed(evt);
            }
        });

        jLabel5.setText("Puerto Escucha");

        jLabel4.setText("IpHost");

        iptext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                iptextActionPerformed(evt);
            }
        });
        iptext.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                iptextKeyTyped(evt);
            }
        });

        porrttext.setText("9091");
        porrttext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                porrttextActionPerformed(evt);
            }
        });
        porrttext.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                porrttextKeyTyped(evt);
            }
        });

        javax.swing.GroupLayout RegistroPanelLayout = new javax.swing.GroupLayout(RegistroPanel);
        RegistroPanel.setLayout(RegistroPanelLayout);
        RegistroPanelLayout.setHorizontalGroup(
            RegistroPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(RegistroPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(RegistroPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Registrobutton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(RegistroPanelLayout.createSequentialGroup()
                        .addGroup(RegistroPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(RegistroPanelLayout.createSequentialGroup()
                                .addGroup(RegistroPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(37, 37, 37)
                                .addGroup(RegistroPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(provedorIp)
                                    .addComponent(ProvedorPuerto, javax.swing.GroupLayout.DEFAULT_SIZE, 131, Short.MAX_VALUE)))
                            .addComponent(jLabel3)
                            .addGroup(RegistroPanelLayout.createSequentialGroup()
                                .addGroup(RegistroPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel5))
                                .addGap(37, 37, 37)
                                .addGroup(RegistroPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(iptext)
                                    .addComponent(porrttext, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        RegistroPanelLayout.setVerticalGroup(
            RegistroPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, RegistroPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(RegistroPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(provedorIp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(RegistroPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ProvedorPuerto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(RegistroPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(iptext, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(RegistroPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(porrttext, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 20, Short.MAX_VALUE)
                .addComponent(Registrobutton)
                .addContainerGap())
        );

        info.setColumns(20);
        info.setRows(5);
        jScrollPane2.setViewportView(info);

        movb.setText("Enviar Movimiento");
        movb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                movbActionPerformed(evt);
            }
        });

        buttonGroup1.add(enviarbutton);
        enviarbutton.setText("Enviar");

        buttonGroup1.add(passarbutton);
        passarbutton.setText("Pasar");

        cantidadf.setText("50");
        cantidadf.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                cantidadfKeyTyped(evt);
            }
        });

        jLabel1.setText("Cantidad");

        javax.swing.GroupLayout manualLayout = new javax.swing.GroupLayout(manual);
        manual.setLayout(manualLayout);
        manualLayout.setHorizontalGroup(
            manualLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(manualLayout.createSequentialGroup()
                .addGroup(manualLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(manualLayout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addGroup(manualLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(passarbutton)
                            .addComponent(enviarbutton))
                        .addGap(40, 40, 40)
                        .addComponent(cantidadf, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel1))
                    .addGroup(manualLayout.createSequentialGroup()
                        .addGap(79, 79, 79)
                        .addComponent(movb, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(69, Short.MAX_VALUE))
        );
        manualLayout.setVerticalGroup(
            manualLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, manualLayout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(manualLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(enviarbutton)
                    .addComponent(cantidadf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(passarbutton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(movb)
                .addGap(36, 36, 36))
        );

        PuntodeReorden.setText("60");
        PuntodeReorden.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PuntodeReordenActionPerformed(evt);
            }
        });
        PuntodeReorden.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                PuntodeReordenKeyTyped(evt);
            }
        });

        jLabel2.setText("Punto de Reorden");

        javax.swing.GroupLayout alepanelLayout = new javax.swing.GroupLayout(alepanel);
        alepanel.setLayout(alepanelLayout);
        alepanelLayout.setHorizontalGroup(
            alepanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(alepanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(PuntodeReorden, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel2)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        alepanelLayout.setVerticalGroup(
            alepanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(alepanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(alepanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(PuntodeReorden, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addContainerGap(60, Short.MAX_VALUE))
        );

        alpanl.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, new java.awt.Color(0, 0, 0), new java.awt.Color(0, 0, 0), new java.awt.Color(0, 0, 0), new java.awt.Color(0, 0, 0)));

        K.setText("0");
        K.setEnabled(false);
        K.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                KActionPerformed(evt);
            }
        });

        jLabel13.setText("x1");

        X1.setText("0");
        X1.setEnabled(false);

        jLabel14.setText("k");

        a.setText("203");
        a.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                aActionPerformed(evt);
            }
        });

        jLabel15.setText("M");

        jLabel16.setText("A");

        M.setText("1000");
        M.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MActionPerformed(evt);
            }
        });

        X0.setText("17");

        jLabel17.setText("x0");

        jLabel18.setText("C");

        jButton3.setText("Borrar Todo");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setText("Generar Numeros");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        eleccion.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Metodo Mixto", "Metodo Multiplicativo", "Metodo Fibonazzi", "Metodo Green", "Mezcla Moore", "Metodo De Mezcla" }));
        eleccion.setSelectedIndex(1);
        eleccion.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                eleccionItemStateChanged(evt);
            }
        });
        eleccion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eleccionActionPerformed(evt);
            }
        });

        Ctext.setText("0");

        jLabel19.setFont(new java.awt.Font("Plantagenet Cherokee", 1, 10)); // NOI18N
        jLabel19.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel19.setText("Numeros PseudoAleatorios");

        aleatoriosbox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Cantidad a Pedir", "Dias Llegada", "Dias Espera" }));
        aleatoriosbox.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                aleatoriosboxItemStateChanged(evt);
            }
        });

        jButton5.setText("Listas");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout alpanlLayout = new javax.swing.GroupLayout(alpanl);
        alpanl.setLayout(alpanlLayout);
        alpanlLayout.setHorizontalGroup(
            alpanlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(eleccion, javax.swing.GroupLayout.Alignment.TRAILING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(aleatoriosbox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jLabel19, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(alpanlLayout.createSequentialGroup()
                .addGroup(alpanlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(alpanlLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(alpanlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(alpanlLayout.createSequentialGroup()
                                .addComponent(M, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(6, 6, 6)
                                .addComponent(jLabel15))
                            .addGroup(alpanlLayout.createSequentialGroup()
                                .addComponent(a, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(8, 8, 8)
                                .addComponent(jLabel16)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(alpanlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(Ctext, javax.swing.GroupLayout.DEFAULT_SIZE, 51, Short.MAX_VALUE)
                            .addComponent(X1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(alpanlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel18, javax.swing.GroupLayout.PREFERRED_SIZE, 12, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel13))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(alpanlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(alpanlLayout.createSequentialGroup()
                                .addComponent(X0, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel17))
                            .addGroup(alpanlLayout.createSequentialGroup()
                                .addComponent(K, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel14)))
                        .addGap(0, 49, Short.MAX_VALUE)))
                .addContainerGap())
        );
        alpanlLayout.setVerticalGroup(
            alpanlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(alpanlLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel19, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(eleccion, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(aleatoriosbox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(15, 15, 15)
                .addGroup(alpanlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(a, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel16)
                    .addComponent(Ctext, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel18)
                    .addComponent(X0, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel17))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(alpanlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(M, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel15)
                    .addComponent(X1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel13)
                    .addComponent(K, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel14))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton5)
                .addGap(495, 495, 495))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(manual, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jScrollPane2)
                    .addComponent(RegistroPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(alepanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addComponent(alpanl, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(RegistroPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(alepanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 129, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(18, 18, 18)
                        .addComponent(manual, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(alpanl, javax.swing.GroupLayout.PREFERRED_SIZE, 445, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(25, 25, 25))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void iptextKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_iptextKeyTyped
        if (!((evt.getKeyChar() + "").equals("0")
                || (evt.getKeyChar() + "").equals("1")
                || (evt.getKeyChar() + "").equals("2")
                || (evt.getKeyChar() + "").equals("3")
                || (evt.getKeyChar() + "").equals("4")
                || (evt.getKeyChar() + "").equals("5")
                || (evt.getKeyChar() + "").equals("6")
                || (evt.getKeyChar() + "").equals("7")
                || (evt.getKeyChar() + "").equals(".")
                || (evt.getKeyChar() + "").equals("8")
                || (evt.getKeyChar() + "").equals("9"))) {
            evt.consume();
        }
    }//GEN-LAST:event_iptextKeyTyped

    private void porrttextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_porrttextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_porrttextActionPerformed

    private void porrttextKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_porrttextKeyTyped
        if (!((evt.getKeyChar() + "").equals("0")
                || (evt.getKeyChar() + "").equals("1")
                || (evt.getKeyChar() + "").equals("2")
                || (evt.getKeyChar() + "").equals("3")
                || (evt.getKeyChar() + "").equals("4")
                || (evt.getKeyChar() + "").equals("5")
                || (evt.getKeyChar() + "").equals("6")
                || (evt.getKeyChar() + "").equals("7")
                || (evt.getKeyChar() + "").equals("8")
                || (evt.getKeyChar() + "").equals("9"))) {
            evt.consume();
        }
    }//GEN-LAST:event_porrttextKeyTyped

    private void PuntodeReordenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PuntodeReordenActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_PuntodeReordenActionPerformed

    private void provedorIpKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_provedorIpKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_provedorIpKeyTyped

    private void ProvedorPuertoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ProvedorPuertoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ProvedorPuertoActionPerformed

    private void ProvedorPuertoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ProvedorPuertoKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_ProvedorPuertoKeyTyped

    private void RegistrobuttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RegistrobuttonActionPerformed
        if (!(ListasNumerosAleatoris.get(0).isEmpty() || ListasNumerosAleatoris.get(1).isEmpty() || ListasNumerosAleatoris.get(2).isEmpty())) {
            if (m == null) {
                VAlidador v = new VAlidador();

                if (v.validate(provedorIp.getText()) && v.validate(iptext.getText())) {

                    try {
                        m = new minorista(simulado,
                                RecursosIniciales,
                                0,
                                p,
                                this,
                                nombre,
                                0,
                                false,
                                100,
                                InventarioMinimo,
                                PrecioVentaUnidad,
                                this.iptext.getText(),
                                Integer.parseInt(porrttext.getText()
                                ));
                        m.ListasNumerosAleatoris=this.ListasNumerosAleatoris;
                        RegistroJugador r = new RegistroJugador(m.getJugadorNombre(), 2, m.getIp(), m.getPuerto(), "M");
                        Comunicacion.RegistrarJugador(r, this, provedorIp.getText(), Integer.parseInt(ProvedorPuerto.getText()));
                        Registrobutton.setText("Esperando Respuesta...");
                    } catch (IOException ex) {
                        Logger.getLogger(MinoritaVista.class.getName()).log(Level.SEVERE, null, ex);
                    }

                }
            } else {
                JOptionPane.showMessageDialog(null, "Ya se Encuentra Registrado");
            }
        } else {
            JOptionPane.showMessageDialog(null, "Debe Generar Todos Los Numeros Aleatorios Primero");
        }
    }//GEN-LAST:event_RegistrobuttonActionPerformed

    private void iptextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_iptextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_iptextActionPerformed

    private void movbActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_movbActionPerformed

        int cantidad = 0;
        int diasEsperando = 0;
        if (enviarbutton.isSelected()) {
            if (!this.m.isEsperando()) {
                try {
                    cantidad = Integer.parseInt(cantidadf.getText());
                    diasEsperando = m.TraerTiempoEspera();
                    m.EnviarPedido(cantidad, diasEsperando);
                } catch (Exception e) {
                    JOptionPane.showMessageDialog(null, "Error en Ingreso de Informacion");
                }

            } else {
                JOptionPane.showMessageDialog(null, "Esperando Pedido");
            }
        } else {
            m.EnviarJugada(3);//pasar

        }

    }//GEN-LAST:event_movbActionPerformed

    private void cantidadfKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cantidadfKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_cantidadfKeyTyped

    private void PuntodeReordenKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_PuntodeReordenKeyTyped
        if (!((evt.getKeyChar() + "").equals("0")
                || (evt.getKeyChar() + "").equals("1")
                || (evt.getKeyChar() + "").equals("2")
                || (evt.getKeyChar() + "").equals("3")
                || (evt.getKeyChar() + "").equals("4")
                || (evt.getKeyChar() + "").equals("5")
                || (evt.getKeyChar() + "").equals("6")
                || (evt.getKeyChar() + "").equals("7")
                || (evt.getKeyChar() + "").equals("8")
                || (evt.getKeyChar() + "").equals("9"))) {
            evt.consume();
        }
    }//GEN-LAST:event_PuntodeReordenKeyTyped

    private void provedorIpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_provedorIpActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_provedorIpActionPerformed

    private void KActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_KActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_KActionPerformed

    private void aActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_aActionPerformed

    private void MActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_MActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        ListasNumerosAleatoris.get(0).clear();
        ListasNumerosAleatoris.get(1).clear();
        ListasNumerosAleatoris.get(2).clear();

        lista.clear();
        list.clear();

        a.setText("0");
        Ctext.setText("0");
        X0.setText("0");
        X1.setText("0");
        M.setText("0");

        K.setText("0");
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        float aux;
        list.clear();
        try {
            Integer.parseInt(a.getText());

            Integer.parseInt(X0.getText());
            Integer.parseInt(X1.getText());
            Integer.parseInt(Ctext.getText());

            Integer.parseInt(M.getText());
            Integer.parseInt(K.getText());

            if (eleccion.getSelectedIndex() == 0) {

                if (Integer.parseInt(M.getText()) < 0 || Integer.parseInt(X0.getText()) < 0 || Integer.parseInt(a.getText()) < 0) {
                    JOptionPane.showMessageDialog(null, "Error en ingreso  De datos", "Error", JOptionPane.ERROR_MESSAGE);
                } else {

                    double m = Double.parseDouble(M.getText());
                    double xo = Double.parseDouble(X0.getText());
                    double A = Double.parseDouble(a.getText());
                    double C = Double.parseDouble(Ctext.getText());
                    Mixto me = new Mixto((int) A, xo, (int) m, (int) C);
                    if (!me.validar()) {
                    } else {
                        lista.clear();
                        String s = "";
                        for (int i = 0; i < m; i++) {
                            aux = (float) me.siguiente();
                            lista.add(aux);

                            s += aux + "\n";
                            list.add(aux);

                        }
                        ListasNumerosAleatoris.set(aleatoriosbox.getSelectedIndex(), (ArrayList) lista.clone());

                    }

                }

            } else if (eleccion.getSelectedIndex() == 1) {

                if (Integer.parseInt(M.getText()) < 0 || Integer.parseInt(X0.getText()) < 0 || Integer.parseInt(a.getText()) < 0) {
                    JOptionPane.showMessageDialog(null, "Error en ingreso  De datos", "Error", JOptionPane.ERROR_MESSAGE);
                } else {
                    String s = "";
                    double m = Double.parseDouble(M.getText());
                    double xo = Double.parseDouble(X0.getText());
                    double A = Double.parseDouble(a.getText());
                    Multiplicativo me = new Multiplicativo((int) A, xo, (int) m);
                    if (!me.validar()) {
                    } else {
                        lista.clear();

                        for (int i = 0; i < m; i++) {
                            aux = (float) me.siguienteMultiplicativo();
                            lista.add(aux);
                            s += aux + "\n";
                            list.add(aux);
                        }

                        ListasNumerosAleatoris.set(aleatoriosbox.getSelectedIndex(), ClonarArray.Clonar(lista));
                    }

                }

            } else {
                if (eleccion.getSelectedIndex() == 2) {

                    if (Integer.parseInt(M.getText()) < 0 || Integer.parseInt(X0.getText()) < 0 || Integer.parseInt(X1.getText()) < 0) {
                        JOptionPane.showMessageDialog(null, "Error en ingreso  De datos", "Error", JOptionPane.ERROR_MESSAGE);
                        lista.clear();
                    } else {
                        String s = "";
                        double m = Double.parseDouble(M.getText());
                        double xo = Double.parseDouble(X0.getText());
                        double x1 = Double.parseDouble(X1.getText());

                        Fibonacci me = new Fibonacci(xo, x1, m);
                        for (int i = 0; i < m; i++) {
                            aux = (float) me.nuevonumero();
                            lista.add(aux);
                            s += aux + "\n";
                            list.add(aux);
                        }

                        ListasNumerosAleatoris.set(aleatoriosbox.getSelectedIndex(), ClonarArray.Clonar(lista));
                    }

                }

                if (eleccion.getSelectedIndex() == 3) {

                    String s = "";
                    if (Integer.parseInt(K.getText()) < 0 || Integer.parseInt(M.getText()) < 0) {
                        JOptionPane.showMessageDialog(null, "Error en ingreso  De datos", "Error", JOptionPane.ERROR_MESSAGE);
                    } else {
                        lista.clear();

                        int m = Integer.parseInt(M.getText());
                        int k = Integer.parseInt(K.getText());
                        Green me = new Green();
                        list = me.metodoAditivoGreen(m, k);

                        for (int i = 0; i < list.size(); i++) {
                            lista.add(list.get(i));
                            s += list.get(i) + "\n";
                        }

                    }

                    ListasNumerosAleatoris.set(aleatoriosbox.getSelectedIndex(), ClonarArray.Clonar(lista));
                } else if (eleccion.getSelectedIndex() == 4) {

                    String s = "";
                    if (Integer.parseInt(M.getText()) < 0) {
                        JOptionPane.showMessageDialog(null, "Error en ingreso  De datos", "Error", JOptionPane.ERROR_MESSAGE);
                    } else {
                        lista.clear();
                        double m = Double.parseDouble(M.getText());
                        Moore me = new Moore(m);

                        for (int i = 0; i < m; i++) {
                            aux = (float) me.siguienteMoore();
                            lista.add(aux);
                            s += aux + "\n";

                            list.add(aux);

                        }

                    }

                    ListasNumerosAleatoris.set(aleatoriosbox.getSelectedIndex(), ClonarArray.Clonar(lista));
                }

                if (eleccion.getSelectedIndex() == 5) {

                    String s = "";
                    if (Integer.parseInt(M.getText()) < 0 || Integer.parseInt(K.getText()) < 0) {
                        JOptionPane.showMessageDialog(null, "Error en ingreso  De datos", "Error", JOptionPane.ERROR_MESSAGE);
                    } else {
                        lista.clear();
                        int m = Integer.parseInt(M.getText());
                        int k = Integer.parseInt(K.getText());
                        Mezcal1 me = new Mezcal1();

                        list = me.metodoAditivoGreen(m, k);

                        for (int i = 0; i < list.size(); i++) {
                            lista.add(list.get(i));
                            s += list.get(i) + "\n";
                        }

                    }

                    ListasNumerosAleatoris.set(aleatoriosbox.getSelectedIndex(), ClonarArray.Clonar(lista));
                } else if (eleccion.getSelectedIndex() == 6) {
                }

            }

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Error en ingreso  De datos" + e.getCause(), "Error", JOptionPane.ERROR_MESSAGE);
        }

        // TODO add your handling code here:
    }//GEN-LAST:event_jButton4ActionPerformed

    private void eleccionItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_eleccionItemStateChanged

    }//GEN-LAST:event_eleccionItemStateChanged

    private void eleccionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eleccionActionPerformed

        if (eleccion.getSelectedIndex() == 0) {

            a.setEnabled(true);
            Ctext.setEnabled(true);
            X0.setEnabled(true);
            X1.setEnabled(true);
            M.setEnabled(true);

            K.setEnabled(true);

            X1.setEnabled(false);
            K.setEnabled(false);

            list.clear();

        } else if (eleccion.getSelectedIndex() == 1) {

            a.setEnabled(true);
            Ctext.setEnabled(true);
            X0.setEnabled(true);
            X1.setEnabled(true);
            M.setEnabled(true);

            K.setEnabled(true);

            X1.setEnabled(false);
            K.setEnabled(false);

            Ctext.setEnabled(false);

        } else if (eleccion.getSelectedIndex() == 2) {

            a.setEnabled(true);
            Ctext.setEnabled(true);
            X0.setEnabled(true);
            X1.setEnabled(true);
            M.setEnabled(true);

            K.setEnabled(true);

            a.setEnabled(false);
            K.setEnabled(false);

            Ctext.setEnabled(false);

        } else if (eleccion.getSelectedIndex() == 3) {

            a.setEnabled(true);
            Ctext.setEnabled(true);
            X0.setEnabled(true);
            X1.setEnabled(true);
            M.setEnabled(true);

            K.setEnabled(true);

            a.setEnabled(false);
            Ctext.setEnabled(false);
            X0.setEnabled(false);
            X1.setEnabled(false);

        } else if (eleccion.getSelectedIndex() == 4) {

            a.setEnabled(true);
            Ctext.setEnabled(true);
            X0.setEnabled(true);
            X1.setEnabled(true);
            M.setEnabled(true);

            K.setEnabled(true);

            a.setEnabled(false);
            Ctext.setEnabled(false);
            X0.setEnabled(false);
            X1.setEnabled(false);

            K.setEnabled(false);
        } else if (eleccion.getSelectedIndex() == 5) {

            a.setEnabled(true);
            Ctext.setEnabled(true);
            X0.setEnabled(true);
            X1.setEnabled(true);
            M.setEnabled(true);

            K.setEnabled(true);

            a.setEnabled(false);
            Ctext.setEnabled(false);
            X0.setEnabled(false);
            X1.setEnabled(false);

        } else if (eleccion.getSelectedIndex() == 6) {

            a.setEnabled(true);
            Ctext.setEnabled(true);
            X0.setEnabled(true);
            X1.setEnabled(true);
            M.setEnabled(true);

            K.setEnabled(true);

            X1.setEnabled(false);

            K.setEnabled(false);

        }
    }//GEN-LAST:event_eleccionActionPerformed

    private void aleatoriosboxItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_aleatoriosboxItemStateChanged

    }//GEN-LAST:event_aleatoriosboxItemStateChanged

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        NumerosAleatiorios v = new NumerosAleatiorios(ListasNumerosAleatoris);
        v.setVisible(true);// TODO add your handling code here:
    }//GEN-LAST:event_jButton5ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MinoritaVista.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MinoritaVista.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MinoritaVista.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MinoritaVista.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MinoritaVista().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField Ctext;
    private javax.swing.JTextField K;
    private javax.swing.JTextField M;
    private javax.swing.JLabel NOMbre1;
    private javax.swing.JTextField ProvedorPuerto;
    private javax.swing.JTextField PuntodeReorden;
    private javax.swing.JPanel RegistroPanel;
    private javax.swing.JButton Registrobutton;
    private javax.swing.JLabel Titulo;
    private javax.swing.JTextField X0;
    private javax.swing.JTextField X1;
    private javax.swing.JTextField a;
    public static javax.swing.JComboBox aleatoriosbox;
    private javax.swing.JPanel alepanel;
    public static javax.swing.JPanel alpanl;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JTextField cantidadf;
    private javax.swing.JComboBox eleccion;
    private javax.swing.JRadioButton enviarbutton;
    private javax.swing.JTextArea info;
    private javax.swing.JTextField iptext;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea logtext;
    private javax.swing.JPanel manual;
    private javax.swing.JButton movb;
    private javax.swing.JRadioButton passarbutton;
    private javax.swing.JTextField porrttext;
    private javax.swing.JTextField provedorIp;
    // End of variables declaration//GEN-END:variables

    @Override
    public void EscribirLog(String s) {

        logtext.append(s + "\n");
        logtext.setCaretPosition(logtext.getDocument().getLength());
    }

    @Override
    public void EsribirVista1(String s) {
        info.setText(s);
    }

    @Override
    public void Registrar(Boolean res) {
        if (res) {
            Registrobutton.setText("Registrado");
            Registrobutton.setEnabled(false);
            RegistroPanel.setEnabled(false);
            provedorIp.setEditable(false);
            ProvedorPuerto.setEditable(false);
            iptext.setEditable(false);
            porrttext.setEditable(false);
            movb.setEnabled(true);
        } else {
            Registrobutton.setText("Registrar e Iniciar");

        }

    }

    @Override
    public void EsribirVista2(String s) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public int GetCantidad() {
        int c = 10;
        try {
            c = Integer.parseInt(cantidadf.getText());
        } catch (Exception e) {
            c = 10;
            this.EscribirLog("Error al Leer Canttidad Tomando Default (10)");
        }
        return c;
    }

    @Override
    public int GetPuntodeReorden() {
        int c = 10;
        try {
            c = Integer.parseInt(PuntodeReorden.getText());
        } catch (Exception e) {
            c = 10;
            this.EscribirLog("Error al Leer Punto de Reorden Tomando Default (10)");
        }
        return c;
    }

    @Override
    public void ControlManual(boolean t) {

        movb.setEnabled(t);
    }

    @Override
    public void ControlDias(boolean t) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }
}
