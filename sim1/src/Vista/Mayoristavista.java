/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Vista;

import NumerosAleatorios.Fibonacci;
import NumerosAleatorios.Green;
import NumerosAleatorios.Mezcal1;
import NumerosAleatorios.Mixto;
import NumerosAleatorios.Moore;
import NumerosAleatorios.Multiplicativo;
import java.awt.HeadlessException;
import java.io.IOException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTextField;
import logica.Mayorista;
import logica.PasarDia;
import logica.VAlidador;

/**
 *
 * @author pc
 */
public class Mayoristavista extends javax.swing.JFrame implements VistaINt {

    /**
     * Creates new form Mayorista
     */
    String Nombre;
    public ArrayList<ArrayList> ListasNumerosAleatoris = new ArrayList();
    public ArrayList<Float> lista = new ArrayList();;
    public ArrayList<Float> list = new ArrayList();;
    Mayorista m;

    public Mayoristavista() {
        initComponents();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel3 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        minimotexrt = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        info = new javax.swing.JTextArea();
        nombrelabel = new javax.swing.JLabel();
        nombrelabel1 = new javax.swing.JLabel();
        reordentext = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        Vistalog = new javax.swing.JTextArea();
        jPanel4 = new javax.swing.JPanel();
        Vista2 = new javax.swing.JScrollPane();
        Vista22 = new javax.swing.JTextArea();
        Iniciar = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        iptext = new javax.swing.JTextField();
        porrttext = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        diasb = new javax.swing.JButton();
        alpanl = new javax.swing.JPanel();
        K = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        X1 = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        a = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        M = new javax.swing.JTextField();
        X0 = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        eleccion = new javax.swing.JComboBox();
        Ctext = new javax.swing.JTextField();
        jLabel19 = new javax.swing.JLabel();
        aleatoriosbox = new javax.swing.JComboBox();
        jButton5 = new javax.swing.JButton();

        jLabel3.setText("jLabel3");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        minimotexrt.setText("50");

        jLabel2.setText("Cantidad a Ordenar");

        info.setColumns(20);
        info.setRows(5);
        jScrollPane1.setViewportView(info);

        nombrelabel.setFont(new java.awt.Font("Impact", 0, 18)); // NOI18N

        nombrelabel1.setFont(new java.awt.Font("Impact", 0, 18)); // NOI18N
        nombrelabel1.setText("Mayorista");

        reordentext.setText("100");

        jLabel1.setText("Punto de ReOrden");

        jScrollPane2.setEnabled(false);

        Vistalog.setColumns(20);
        Vistalog.setRows(5);
        jScrollPane2.setViewportView(Vistalog);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 274, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(49, 49, 49)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Vista 1", jPanel3);

        Vista2.setEnabled(false);

        Vista22.setColumns(20);
        Vista22.setRows(5);
        Vista2.setViewportView(Vista22);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(Vista2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 274, Short.MAX_VALUE)
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(49, 49, 49)
                .addComponent(Vista2, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Vista 2", jPanel4);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                            .addComponent(jLabel2)
                            .addGap(37, 37, 37)
                            .addComponent(minimotexrt))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                            .addComponent(jLabel1)
                            .addGap(37, 37, 37)
                            .addComponent(reordentext, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 274, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(nombrelabel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 321, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(nombrelabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 322, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 279, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(nombrelabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(nombrelabel, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(7, 7, 7)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(reordentext, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(minimotexrt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        Iniciar.setText("Iniciar");
        Iniciar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                IniciarActionPerformed(evt);
            }
        });

        jLabel4.setText("IpHost");

        iptext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                iptextActionPerformed(evt);
            }
        });
        iptext.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                iptextKeyTyped(evt);
            }
        });

        porrttext.setText("9090");
        porrttext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                porrttextActionPerformed(evt);
            }
        });
        porrttext.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                porrttextKeyTyped(evt);
            }
        });

        jLabel5.setText("Puerto Escucha");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, 104, Short.MAX_VALUE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(iptext)
                    .addComponent(porrttext, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(37, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(iptext, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(porrttext, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addContainerGap())
        );

        diasb.setText("Pasar Dias");
        diasb.setEnabled(false);
        diasb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                diasbActionPerformed(evt);
            }
        });

        alpanl.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, new java.awt.Color(0, 0, 0), new java.awt.Color(0, 0, 0), new java.awt.Color(0, 0, 0), new java.awt.Color(0, 0, 0)));

        K.setText("0");
        K.setEnabled(false);
        K.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                KActionPerformed(evt);
            }
        });

        jLabel13.setText("x1");

        X1.setText("0");
        X1.setEnabled(false);

        jLabel14.setText("k");

        a.setText("203");
        a.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                aActionPerformed(evt);
            }
        });

        jLabel15.setText("M");

        jLabel16.setText("A");

        M.setText("1000");
        M.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MActionPerformed(evt);
            }
        });

        X0.setText("17");

        jLabel17.setText("x0");

        jLabel18.setText("C");

        jButton3.setText("Borrar Todo");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setText("Generar Numeros");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        eleccion.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Metodo Mixto", "Metodo Multiplicativo", "Metodo Fibonazzi", "Metodo Green", "Mezcla Moore", "Metodo De Mezcla" }));
        eleccion.setSelectedIndex(1);
        eleccion.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                eleccionItemStateChanged(evt);
            }
        });
        eleccion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eleccionActionPerformed(evt);
            }
        });

        Ctext.setText("0");

        jLabel19.setFont(new java.awt.Font("Plantagenet Cherokee", 1, 10)); // NOI18N
        jLabel19.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel19.setText("Numeros PseudoAleatorios");

        aleatoriosbox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Cantidad a Pedir", "Dias Llegada", "Dias Espera" }));
        aleatoriosbox.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                aleatoriosboxItemStateChanged(evt);
            }
        });

        jButton5.setText("Listas");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout alpanlLayout = new javax.swing.GroupLayout(alpanl);
        alpanl.setLayout(alpanlLayout);
        alpanlLayout.setHorizontalGroup(
            alpanlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(eleccion, javax.swing.GroupLayout.Alignment.TRAILING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(aleatoriosbox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jLabel19, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(alpanlLayout.createSequentialGroup()
                .addGroup(alpanlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(alpanlLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(alpanlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(alpanlLayout.createSequentialGroup()
                                .addComponent(M, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(6, 6, 6)
                                .addComponent(jLabel15))
                            .addGroup(alpanlLayout.createSequentialGroup()
                                .addComponent(a, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(8, 8, 8)
                                .addComponent(jLabel16)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(alpanlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(Ctext, javax.swing.GroupLayout.DEFAULT_SIZE, 51, Short.MAX_VALUE)
                            .addComponent(X1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(alpanlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel18, javax.swing.GroupLayout.PREFERRED_SIZE, 12, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel13))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(alpanlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(alpanlLayout.createSequentialGroup()
                                .addComponent(X0, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel17))
                            .addGroup(alpanlLayout.createSequentialGroup()
                                .addComponent(K, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel14)))
                        .addGap(0, 49, Short.MAX_VALUE)))
                .addContainerGap())
        );
        alpanlLayout.setVerticalGroup(
            alpanlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(alpanlLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel19, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(eleccion, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(aleatoriosbox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(15, 15, 15)
                .addGroup(alpanlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(a, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel16)
                    .addComponent(Ctext, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel18)
                    .addComponent(X0, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel17))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(alpanlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(M, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel15)
                    .addComponent(X1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel13)
                    .addComponent(K, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel14))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton5)
                .addGap(495, 495, 495))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(Iniciar)
                                .addGap(41, 41, 41)
                                .addComponent(diasb)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(alpanl, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(19, 19, 19))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(alpanl, javax.swing.GroupLayout.PREFERRED_SIZE, 445, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Iniciar)
                    .addComponent(diasb))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void IniciarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_IniciarActionPerformed
        if (!(ListasNumerosAleatoris.get(0).isEmpty() || ListasNumerosAleatoris.get(1).isEmpty() || ListasNumerosAleatoris.get(2).isEmpty())) {
            try {
                VAlidador v = new VAlidador();
                if (v.validate(iptext.getText())) {
                    m = new Mayorista(
                            this,
                            Nombre,
                            0,
                            false,
                            1000,
                            Integer.parseInt(reordentext.getText()),
                            0,
                            10,
                            iptext.getText(),
                            Integer.parseInt(porrttext.getText())
                    );
                }
                Iniciar.setEnabled(false);
            } catch (IOException ex) {
                Logger.getLogger(Mayoristavista.class.getName()).log(Level.SEVERE, null, ex);
            }
            m.start();
            m.ListasNumerosAleatoris = this.ListasNumerosAleatoris;
        } else {
            JOptionPane.showMessageDialog(null, "Debe Generar Todos Los Numeros Aleatorios Primero");
        }

    }//GEN-LAST:event_IniciarActionPerformed

    private void porrttextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_porrttextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_porrttextActionPerformed

    private void iptextKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_iptextKeyTyped
        if (!((evt.getKeyChar() + "").equals("0")
                || (evt.getKeyChar() + "").equals("1")
                || (evt.getKeyChar() + "").equals("2")
                || (evt.getKeyChar() + "").equals("3")
                || (evt.getKeyChar() + "").equals("4")
                || (evt.getKeyChar() + "").equals("5")
                || (evt.getKeyChar() + "").equals("6")
                || (evt.getKeyChar() + "").equals("7")
                || (evt.getKeyChar() + "").equals(".")
                || (evt.getKeyChar() + "").equals("8")
                || (evt.getKeyChar() + "").equals("9"))) {
            evt.consume();
        }
    }//GEN-LAST:event_iptextKeyTyped

    private void porrttextKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_porrttextKeyTyped
        if (!((evt.getKeyChar() + "").equals("0")
                || (evt.getKeyChar() + "").equals("1")
                || (evt.getKeyChar() + "").equals("2")
                || (evt.getKeyChar() + "").equals("3")
                || (evt.getKeyChar() + "").equals("4")
                || (evt.getKeyChar() + "").equals("5")
                || (evt.getKeyChar() + "").equals("6")
                || (evt.getKeyChar() + "").equals("7")
                || (evt.getKeyChar() + "").equals("8")
                || (evt.getKeyChar() + "").equals("9"))) {
            evt.consume();
        }
    }//GEN-LAST:event_porrttextKeyTyped

    private void iptextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_iptextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_iptextActionPerformed

    private void diasbActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_diasbActionPerformed
        m.Iterar();
    }//GEN-LAST:event_diasbActionPerformed

    private void KActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_KActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_KActionPerformed

    private void aActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_aActionPerformed

    private void MActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_MActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        ListasNumerosAleatoris.get(0).clear();
        ListasNumerosAleatoris.get(1).clear();
        ListasNumerosAleatoris.get(2).clear();

        lista.clear();
        list.clear();

        a.setText("0");
        Ctext.setText("0");
        X0.setText("0");
        X1.setText("0");
        M.setText("0");

        K.setText("0");
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        float aux;
        list.clear();
        try {
            Integer.parseInt(a.getText());

            Integer.parseInt(X0.getText());
            Integer.parseInt(X1.getText());
            Integer.parseInt(Ctext.getText());

            Integer.parseInt(M.getText());
            Integer.parseInt(K.getText());

            if (eleccion.getSelectedIndex() == 0) {

                if (Integer.parseInt(M.getText()) < 0 || Integer.parseInt(X0.getText()) < 0 || Integer.parseInt(a.getText()) < 0) {
                    JOptionPane.showMessageDialog(null, "Error en ingreso  De datos", "Error", JOptionPane.ERROR_MESSAGE);
                } else {

                    double m = Double.parseDouble(M.getText());
                    double xo = Double.parseDouble(X0.getText());
                    double A = Double.parseDouble(a.getText());
                    double C = Double.parseDouble(Ctext.getText());
                    Mixto me = new Mixto((int) A, xo, (int) m, (int) C);
                    if (!me.validar()) {
                    } else {
                        lista.clear();
                        String s = "";
                        for (int i = 0; i < m; i++) {
                            aux = (float) me.siguiente();
                            lista.add(aux);

                            s += aux + "\n";
                            list.add(aux);

                        }
                        ListasNumerosAleatoris.set(aleatoriosbox.getSelectedIndex(), (ArrayList) lista.clone());

                    }

                }

            } else if (eleccion.getSelectedIndex() == 1) {

                if (Integer.parseInt(M.getText()) < 0 || Integer.parseInt(X0.getText()) < 0 || Integer.parseInt(a.getText()) < 0) {
                    JOptionPane.showMessageDialog(null, "Error en ingreso  De datos", "Error", JOptionPane.ERROR_MESSAGE);
                } else {
                    String s = "";
                    double m = Double.parseDouble(M.getText());
                    double xo = Double.parseDouble(X0.getText());
                    double A = Double.parseDouble(a.getText());
                    Multiplicativo me = new Multiplicativo((int) A, xo, (int) m);
                    if (!me.validar()) {
                    } else {
                        lista.clear();

                        for (int i = 0; i < m; i++) {
                            aux = (float) me.siguienteMultiplicativo();
                            lista.add(aux);
                            s += aux + "\n";
                            list.add(aux);
                        }

                        ListasNumerosAleatoris.set(aleatoriosbox.getSelectedIndex(), ClonarArray.Clonar(lista));
                    }

                }

            } else {
                if (eleccion.getSelectedIndex() == 2) {

                    if (Integer.parseInt(M.getText()) < 0 || Integer.parseInt(X0.getText()) < 0 || Integer.parseInt(X1.getText()) < 0) {
                        JOptionPane.showMessageDialog(null, "Error en ingreso  De datos", "Error", JOptionPane.ERROR_MESSAGE);
                        lista.clear();
                    } else {
                        String s = "";
                        double m = Double.parseDouble(M.getText());
                        double xo = Double.parseDouble(X0.getText());
                        double x1 = Double.parseDouble(X1.getText());

                        Fibonacci me = new Fibonacci(xo, x1, m);
                        for (int i = 0; i < m; i++) {
                            aux = (float) me.nuevonumero();
                            lista.add(aux);
                            s += aux + "\n";
                            list.add(aux);
                        }

                        ListasNumerosAleatoris.set(aleatoriosbox.getSelectedIndex(), ClonarArray.Clonar(lista));
                    }

                }

                if (eleccion.getSelectedIndex() == 3) {

                    String s = "";
                    if (Integer.parseInt(K.getText()) < 0 || Integer.parseInt(M.getText()) < 0) {
                        JOptionPane.showMessageDialog(null, "Error en ingreso  De datos", "Error", JOptionPane.ERROR_MESSAGE);
                    } else {
                        lista.clear();

                        int m = Integer.parseInt(M.getText());
                        int k = Integer.parseInt(K.getText());
                        Green me = new Green();
                        list = me.metodoAditivoGreen(m, k);

                        for (int i = 0; i < list.size(); i++) {
                            lista.add(list.get(i));
                            s += list.get(i) + "\n";
                        }

                    }

                    ListasNumerosAleatoris.set(aleatoriosbox.getSelectedIndex(), ClonarArray.Clonar(lista));
                } else if (eleccion.getSelectedIndex() == 4) {

                    String s = "";
                    if (Integer.parseInt(M.getText()) < 0) {
                        JOptionPane.showMessageDialog(null, "Error en ingreso  De datos", "Error", JOptionPane.ERROR_MESSAGE);
                    } else {
                        lista.clear();
                        double m = Double.parseDouble(M.getText());
                        Moore me = new Moore(m);

                        for (int i = 0; i < m; i++) {
                            aux = (float) me.siguienteMoore();
                            lista.add(aux);
                            s += aux + "\n";

                            list.add(aux);

                        }

                    }

                    ListasNumerosAleatoris.set(aleatoriosbox.getSelectedIndex(), ClonarArray.Clonar(lista));
                }

                if (eleccion.getSelectedIndex() == 5) {

                    String s = "";
                    if (Integer.parseInt(M.getText()) < 0 || Integer.parseInt(K.getText()) < 0) {
                        JOptionPane.showMessageDialog(null, "Error en ingreso  De datos", "Error", JOptionPane.ERROR_MESSAGE);
                    } else {
                        lista.clear();
                        int m = Integer.parseInt(M.getText());
                        int k = Integer.parseInt(K.getText());
                        Mezcal1 me = new Mezcal1();

                        list = me.metodoAditivoGreen(m, k);

                        for (int i = 0; i < list.size(); i++) {
                            lista.add(list.get(i));
                            s += list.get(i) + "\n";
                        }

                    }

                    ListasNumerosAleatoris.set(aleatoriosbox.getSelectedIndex(), ClonarArray.Clonar(lista));
                } else if (eleccion.getSelectedIndex() == 6) {
                }

            }

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Error en ingreso  De datos" + e.getCause(), "Error", JOptionPane.ERROR_MESSAGE);
        }

        // TODO add your handling code here:
    }//GEN-LAST:event_jButton4ActionPerformed

    private void eleccionItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_eleccionItemStateChanged

    }//GEN-LAST:event_eleccionItemStateChanged

    private void eleccionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eleccionActionPerformed

        if (eleccion.getSelectedIndex() == 0) {

            a.setEnabled(true);
            Ctext.setEnabled(true);
            X0.setEnabled(true);
            X1.setEnabled(true);
            M.setEnabled(true);

            K.setEnabled(true);

            X1.setEnabled(false);
            K.setEnabled(false);

            list.clear();

        } else if (eleccion.getSelectedIndex() == 1) {

            a.setEnabled(true);
            Ctext.setEnabled(true);
            X0.setEnabled(true);
            X1.setEnabled(true);
            M.setEnabled(true);

            K.setEnabled(true);

            X1.setEnabled(false);
            K.setEnabled(false);

            Ctext.setEnabled(false);

        } else if (eleccion.getSelectedIndex() == 2) {

            a.setEnabled(true);
            Ctext.setEnabled(true);
            X0.setEnabled(true);
            X1.setEnabled(true);
            M.setEnabled(true);

            K.setEnabled(true);

            a.setEnabled(false);
            K.setEnabled(false);

            Ctext.setEnabled(false);

        } else if (eleccion.getSelectedIndex() == 3) {

            a.setEnabled(true);
            Ctext.setEnabled(true);
            X0.setEnabled(true);
            X1.setEnabled(true);
            M.setEnabled(true);

            K.setEnabled(true);

            a.setEnabled(false);
            Ctext.setEnabled(false);
            X0.setEnabled(false);
            X1.setEnabled(false);

        } else if (eleccion.getSelectedIndex() == 4) {

            a.setEnabled(true);
            Ctext.setEnabled(true);
            X0.setEnabled(true);
            X1.setEnabled(true);
            M.setEnabled(true);

            K.setEnabled(true);

            a.setEnabled(false);
            Ctext.setEnabled(false);
            X0.setEnabled(false);
            X1.setEnabled(false);

            K.setEnabled(false);
        } else if (eleccion.getSelectedIndex() == 5) {

            a.setEnabled(true);
            Ctext.setEnabled(true);
            X0.setEnabled(true);
            X1.setEnabled(true);
            M.setEnabled(true);

            K.setEnabled(true);

            a.setEnabled(false);
            Ctext.setEnabled(false);
            X0.setEnabled(false);
            X1.setEnabled(false);

        } else if (eleccion.getSelectedIndex() == 6) {

            a.setEnabled(true);
            Ctext.setEnabled(true);
            X0.setEnabled(true);
            X1.setEnabled(true);
            M.setEnabled(true);

            K.setEnabled(true);

            X1.setEnabled(false);

            K.setEnabled(false);

        }
    }//GEN-LAST:event_eleccionActionPerformed

    private void aleatoriosboxItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_aleatoriosboxItemStateChanged

    }//GEN-LAST:event_aleatoriosboxItemStateChanged

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        NumerosAleatiorios v = new NumerosAleatiorios(ListasNumerosAleatoris);
        v.setVisible(true);// TODO add your handling code here:
    }//GEN-LAST:event_jButton5ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Mayoristavista.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Mayoristavista.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Mayoristavista.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Mayoristavista.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Mayoristavista().setVisible(true);
            }
        });
    }

    public Mayoristavista(String Nombre, String Ip) {
        initComponents();
        this.Nombre = Nombre;
        nombrelabel.setText(Nombre);
 ListasNumerosAleatoris.add(new ArrayList());
        ListasNumerosAleatoris.add(new ArrayList());
        ListasNumerosAleatoris.add(new ArrayList());
        iptext.setText(Ip);

        info.setEditable(false);
        this.Vistalog.setEditable(false);

    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField Ctext;
    private javax.swing.JButton Iniciar;
    private javax.swing.JTextField K;
    private javax.swing.JTextField M;
    private javax.swing.JScrollPane Vista2;
    private javax.swing.JTextArea Vista22;
    private javax.swing.JTextArea Vistalog;
    private javax.swing.JTextField X0;
    private javax.swing.JTextField X1;
    private javax.swing.JTextField a;
    public static javax.swing.JComboBox aleatoriosbox;
    public static javax.swing.JPanel alpanl;
    private javax.swing.JButton diasb;
    private javax.swing.JComboBox eleccion;
    public static javax.swing.JTextArea info;
    private javax.swing.JTextField iptext;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTextField minimotexrt;
    private javax.swing.JLabel nombrelabel;
    private javax.swing.JLabel nombrelabel1;
    private javax.swing.JTextField porrttext;
    private javax.swing.JTextField reordentext;
    // End of variables declaration//GEN-END:variables

    @Override
    public void EscribirLog(String s) {
        info.append(s + "\n");
        info.setCaretPosition(info.getDocument().getLength());
    }

    @Override
    public void EsribirVista1(String s) {

        Vistalog.setText(s);

    }

    @Override
    public void Registrar(Boolean res) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public void EsribirVista2(String s) {

        Vista22.setText(s);
    }

    @Override
    public int GetCantidad() {
           try {
            return Integer.parseInt(this.minimotexrt.getText());
        } catch (Exception e) {
            this.EscribirLog("Error al Leer Punto de Reorden Tomando Valor por Default 10");
            return 10;
        }
    }

    @Override
    public int GetPuntodeReorden() {
        try {
            return Integer.parseInt(this.reordentext.getText());
        } catch (Exception e) {
            this.EscribirLog("Error al Leer Punto de Reorden Tomando Valor por Default 10");
            return 10;
        }
    }

    @Override
    public void ControlManual(boolean t) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public void ControlDias(boolean t) {
        diasb.setEnabled(t);

    }
}
